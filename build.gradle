plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id "com.netflix.dgs.codegen" version "5.0.6"
    id "com.diffplug.spotless" version "6.25.0"
    id "org.sonarqube" version "5.0.0.4638"
    id "jacoco"
    id "org.owasp.dependencycheck" version '8.2.1'
    id "org.cyclonedx.bom" version '1.7.4'
    id "org.openrewrite.rewrite" version "6.11.2"
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

spotless {
    java {
        target project.fileTree(project.rootDir) {
            include '**/*.java'
            exclude 'build/generated/**/*.*', 'build/generated-examples/**/*.*'
        }
        googleJavaFormat()
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test {
    finalizedBy jacocoTestReport
}

dependencyCheck {
    formats = ['HTML', 'JSON']
    outputDirectory = "$buildDir/reports/owasp-dependencyCheck"
}

cyclonedxBom {
    destination = file("build/reports/sbom")
}

rewrite {
    activeRecipe("org.openrewrite.staticanalysis.CodeCleanup")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:4.9.21'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation "jakarta.validation:jakarta.validation-api:3.0.2"
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2',
                'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'joda-time:joda-time:2.10.13'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    testImplementation 'io.rest-assured:json-path:5.4.0'
    testImplementation 'io.rest-assured:xml-path:5.4.0'
    testImplementation "org.mockito:mockito-junit-jupiter:3.12.4"
    testImplementation 'io.rest-assured:spring-mock-mvc:5.4.0'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

    rewrite("org.openrewrite.recipe:rewrite-spring:5.8.0")
    rewrite("org.openrewrite.recipe:rewrite-static-analysis:1.5.0")
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('clean') {
    doFirst {
        delete './dev.db'
    }
}

tasks.named('generateJava') {
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'io.spring.graphql' // The package name to use to generate sources
}

sonar {
    properties {
        property "sonar.projectKey", "Workshop-dette-technique"
        property "sonar.organization", "Workshop-dette-technique"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "sqp_1af36f647da2f89630dcb0c7a25baf13b17e1a34"
        property "sonar.dependencyCheck.htmlReportPath", "${buildDir}/reports/owasp-dependencyCheck/dependency-check-report.html"
        property "sonar.dependencyCheck.jsonReportPath", "${buildDir}/reports/owasp-dependencyCheck/dependency-check-report.json"
    }
}
